@tailwind base;
@tailwind components;
@tailwind utilities;

/* custom classes */
.main-background {
  @apply flex justify-center items-center bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-emerald-500 to-90% h-screen;
}

/* -------------------------------------------------------------------------------------------------
 * The styles rules for components use CSS nesting native feature. Any cases if browser do not 
   support CSS nesting postcss-nested plugin is active.
 * ----------------------------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------------------------------
 * Accordion size rules (dividing by 3 logic)
 * ----------------------------------------------------------------------------------------------- */
@for $size from 2 through 4 by 1 {
  .accordion-root$(size) {
    @apply w-[calc(100px*$size)];
  }

  .accordion-trigger$(size) {
    @apply h-[calc(15px*$size)] text-[calc(5px*$size)];
  }

  .accordion-content$(size) {
    @apply text-[calc(5px*$size)];

    .accordion-collapsibleText$(size) {
      @apply py-[calc(5px*$size)]
    }
  }
}

/* -------------------------------------------------------------------------------------------------
 * AlertDialog size rules (dividing by 3 logic)
 * ----------------------------------------------------------------------------------------------- */
@for $size from 2 through 4 by 1 {
  .alertdialog-trigger$(size) {
    @apply h-[calc(12px*$size)] px-[calc(5px*$size)] text-[calc(5px*$size)];
  }

  .alertdialog-content$(size) {
    @apply max-w-[calc(165px*$size)] p-[calc(8px*$size)] max-h-[calc(28vh*$size)] w-[calc(30vw*$size)];

    .alertdialog-title$(size) {
      @apply text-[calc(6px*$size)];
    }

    .alertdialog-description$(size) {
      @apply text-[calc(5px*$size)];
    }

    .alertdialog-actions$(size) {
      @apply gap-[calc(8px*$size)];

      .alertdialog-cancel$(size) {
        @apply h-[calc(12px*$size)] text-[calc(5px*$size)] px-[calc(5px*$size)];
      }
      .alertdialog-action$(size) {
        @apply h-[calc(12px*$size)] text-[calc(5px*$size)] px-[calc(5px*$size)];
      }
    }
  }

  .accordion-trigger$(size) {
    @apply h-[calc(15px*$size)] text-[calc(5px*$size)];
  }
}

/* -------------------------------------------------------------------------------------------------
 * Popover size rules (dividing by 3 logic)
 * ----------------------------------------------------------------------------------------------- */
@for $size from 2 through 4 by 1 {
  .popover-trigger$(size) {
    @apply h-[calc(12px*$size)] w-[calc(12px*$size)] px-[calc(2px*$size)];

    svg {
      width: calc(5px*$size);
      height : calc(5px*$size);
    }
  }

  .popover-content$(size) {
    @apply w-[calc(86px*$size)] text-[calc(5px*$size)];

    .popover-content-container$(size) {

      @apply gap-$size;

      .popover-content-paragraph$(size) {
        @apply leading-[calc(6px*$size)] mb-$size
      }

      fieldset {
        @apply gap-[calc(0.25rem*$size)]
      }

      label {
        @apply text-[calc(4px*$size)]  w-[calc(25px*$size)]
      }

      input {
        @apply text-[calc(4px*$size)] px-$size h-[calc(8px*$size)]
      }
    }

    .popover-close$(size) {
      @apply h-[calc(8px*$size)] w-[calc(8px*$size)] top-[calc(2px*$size)] right-[calc(2px*$size)];

      svg {
        width: calc(5px*$size);
        height : calc(5px*$size);
      }
    }

  }
}
